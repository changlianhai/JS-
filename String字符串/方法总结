
1.length: 是只读属性，不可以修改
2.字符串方法
    (1)  查找某个字符  (原字符串不变)
        charAt(n) 获取指定索引的字符
        chartCodeAt() 获取指定索引的字符的ASCII码
        for(var i=0,len=str.length;i<len;i++){
          console.log(str.charAt(i));   //--->> str[i] ie6-ie8不兼容
        }


    (2)  字符串截取  (原字符串不变)
        --->> substr(n,m) 从索引n，截取m个元素
        --->> substring(n.m) 从索引n，截取到索引m [n,m)  包含n,不包含m
        --->> slice(n,m)  从索引n，截取到索引m [n,m)  包含n,不包含m支持负数索引

        注： 若上面都是一个参数，则从当前索引截取到末尾
             若没有参数，默认都是克隆一份字符串


    (3)  字符串查找
        --->> indexOf(str[,n]) 第一次出现的位置
        --->> lastIndexOf(str[,n]) 最后一次出现的位置，
         注： 默认n是第一次，可以查找第n次出现的索引,找不到返回-1

    (4)  大小写转换   (原字符串不变)
       --->> toLowerCase()  转为小写
       --->> toUpperCase()  转为大写

    (5)  字符串替换
       --->> replace(替换谁，用谁来替换)
         在不使用正则的情况下，只替换一次
         一般情况下，配合正则使用

        var str = '123a123a123a';
         console.log( str.replace('a','4') );
         console.log( str.replace(/a/g,'4'));  // -->> g代表全文


    (6)  字符串转为数组
        var str = '1234';
       --->> split() / split(' ')  默认以整体分割为一个数组 ['1234']
       --->> *split('') 每一个字符都分为一个数组的元素 ['1','2','3']



    *(7) 数组转为字符串
       var ary = [1,2,3,4]
       --->> join()     一个个分开'1,2,3,4'
       --->> *join('')   默认一个整体作为字符串 '1234'
       --->> join(' ')  以空格分开 '1 2 3 4'

       字符串反转：
         String.prototype.reverse = function() {
           return this.split('').reverse().join();
         }